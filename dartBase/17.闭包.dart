/*
闭包：
    1.全局变量的特点：全局变量常驻内存，全局变量会污染全局
    2.局部变量的特点：不常住内存，会被垃圾回收机制回收，不会污染全局

    ****通过闭包想要实现的功能****
    优势：有了全局变量的优点，有了局部变量的有点，同时没有他们的缺点。
    1.常驻内存
    2.不污染全局
         产生了闭包，闭包可以解决这个问题。
             闭包：函数嵌套函数，内部函数会调用外部函数的变量或者参数，变量或者参数不会被系统回收
             闭包的写法：函数嵌套函数，并return里面的函数，这样就形成了闭包
*/

// 全局变量
var a = 123;

void main() {
  print(a); // 全局变量在****全局***中使用
  fn() {
    a++; // 全局变量不会被销毁，因此，每调用一次，基数会增大
    print(a); // 全局变量在****函数内部***中使用
  }

  fn();
  fn();
  fn();
  fn();

  // 测试局部变量
  printInfo() {
    var myNum = 666;
    myNum++;
    print(myNum); // 局部变量
  }

  // print(myNum);// 局部变量无法在作用域之外被访问
  printInfo(); // 局部变量用完就销毁，因此，每一次调用结束，变量都会重置
  printInfo();
  printInfo();
  printInfo();

  // 闭包
  fnn() {
    var aa = 254; // 局部变量，不会污染全局
    return () { // 必须是返回一个函数
      aa++; // 函数内部调用着，此变量无法被垃圾回收
      print(aa);
    };
  }

  var bb = fnn(); // bb为返回的匿名函数
  bb();
  bb(); // 多次调用，变量没有被回收，因此，可以实现累加
}
